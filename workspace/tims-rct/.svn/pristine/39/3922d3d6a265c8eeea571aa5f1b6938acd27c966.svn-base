/*************************************************************
 프로그램명 : Rcp1100eController.java
 설명 : 지원서관리
 작성자 : 백세진
 일자 : 2025.04.09
*************************************************************/
package com.atsys.tims.rcp.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.atsys.base.ui.ViewHelper;
import com.atsys.model.TbAppVo;
import com.atsys.nxf.app.vo.Pagination;
import com.atsys.tims.rcp.service.Rcp1100eService; 

@Controller
@RequestMapping(value = "/rcp1100e")
public class Rcp1100eController {
	
	private static final String ADM_PATH   = "tims/views/rcp/"; 
	private final String viewList		   = ADM_PATH + "Rcp1100e";
	private final String qualSelectPop     = ADM_PATH + "popup/" + "Rcp1100p1"; // 자격미달여부관리 팝업
	private final String careerRecogPop    = ADM_PATH + "popup/" + "Rcp1100p2"; // 경력산정 팝업
	private final String upldFileListPop   = ADM_PATH + "popup/" + "Rcp1100p3"; // 첨부파일조회 팝업	
	private final String appDetailPop      = ADM_PATH + "popup/" + "Rcp1100p4"; // 지원서상세보기 팝업
	
	@Autowired
	ViewHelper viewHelper;
	
	@Autowired
	Rcp1100eService rcp1100eService;
	
	@RequestMapping
	public ModelAndView init(@RequestParam Map<String, Object> so, Model model, HttpSession session) throws Exception { 
		model.addAllAttributes(so);
		session.setAttribute("userRole", "ADMIN"); 
		return viewHelper.createModelAndView(viewList);
	} 
	
	/* 자격미달여부 팝업 */
	@RequestMapping(value="/popup/qualynSelect/{appCd}")
	public ModelAndView popupQualynSelect(@PathVariable(value = "appCd") String appCd,
	                                      HttpSession session) throws Exception {
	    session.setAttribute("userRole", "ADMIN");

	    ModelAndView mav = viewHelper.createModelAndViewPopup(qualSelectPop);
	    mav.addObject("appCd", appCd);  
	    return mav;
	} 
	
	/* 자격미달여부 및 사유 저장 */
	@RequestMapping("/saveQualYn")  
	public @ResponseBody Object lrgMenu(HttpSession session, @RequestBody TbAppVo vo, Model model) throws Exception {
		System.out.println(vo.getAppCd());
		session.setAttribute("userRole", "ADMIN");
		return rcp1100eService.updateQualYnAndReason(vo);
	}
	
	/* 경력산정(직원) 팝업 */
	@RequestMapping(value="/popup/careerRecog")
	public ModelAndView popupCareerRecog(@RequestParam Map<String, Object> so, Model model, HttpSession session) throws Exception {  
		model.addAllAttributes(so);
		session.setAttribute("userRole", "ADMIN");
		return viewHelper.createModelAndViewPopup(careerRecogPop);
	} 
	
	/* 첨부파일 팝업 */
	@RequestMapping(value="/popup/upldFileList")
	public ModelAndView popupUpldFileList(@RequestParam Map<String, Object> so, Model model, HttpSession session) throws Exception {  
		model.addAllAttributes(so);
		session.setAttribute("userRole", "ADMIN");
		return viewHelper.createModelAndViewPopup(upldFileListPop);
	}  
	
	/* 지원서 상세보기 팝업 */
	@RequestMapping(value="/popup/appDetail/{appCd}")
	public ModelAndView popupAppDetail(@PathVariable(value = "appCd") String appCd,
	                                      HttpSession session) throws Exception {
	    session.setAttribute("userRole", "ADMIN");

	    ModelAndView mav = viewHelper.createModelAndViewPopup(appDetailPop);
	    mav.addObject("appCd", appCd);  
	    return mav;
	} 
	
	/* 지원서 목록 조회 */
	@RequestMapping(value = "/search")
	@ResponseBody
	public Map<String, Object> selectList(@RequestBody Map<String, Object> so) throws Exception {

		int pageIndex = Integer.parseInt(String.valueOf(so.getOrDefault("pageIndex", "1")));
		so.put("currentPageNo", pageIndex); 

		List<TbAppVo> list = rcp1100eService.selectList(so);
		int totalCount = rcp1100eService.selectTotalCount(so);

		Pagination page = new Pagination();
		page.setCurrentPageNo(pageIndex);
		page.setTotalRecordCount(totalCount);

		Map<String, Object> result = new HashMap<>();
		result.put("list", list);
		result.put("paginationInfo", page.getPaginationInfo());
		result.put("totalCount", totalCount);

		return result;
	} 
	
	
}
