/*************************************************************
 프로그램명 : Evl1101eController.java
 설명 : 평가위원관리
 작성자 : 이예찬
 일자 : 2025.04.29
*************************************************************/
package com.atsys.tims.evl.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.atsys.base.ConstantsUtils;
import com.atsys.base.ui.ViewHelper;
import com.atsys.model.Evl1101eVo;
import com.atsys.model.TbNtcFieldVo;
import com.atsys.model.TbSelEvalJdgVo;
import com.atsys.tims.evl.service.Evl1101eService;

@Controller
@RequestMapping(value = "/evl1101e")
public class Evl1101eController {
	
	private static final String ADM_PATH  = ConstantsUtils.getAdmViewRoot() + "/evl/"; 
	private final String viewList		  = ADM_PATH + "Evl1101e";
	
	@Autowired
	ViewHelper viewHelper;
	
	@Autowired
	Evl1101eService evl1101eService;
	
	@RequestMapping
	public ModelAndView init(HttpServletRequest request, @RequestParam Map<String, Object> so, Model model, HttpSession session) throws Exception { 
		model.addAllAttributes(so);
		session.setAttribute("userRole", "ADMIN");
		return viewHelper.createModelAndView(viewList);
	} 
	
	@RequestMapping(value = "/search")
	@ResponseBody
	public Map<String, Object> getInfo(@RequestParam Map<String, Object> so) throws Exception {
		Map<String, Object> result = new HashMap<>();
		Evl1101eVo info = evl1101eService.getInfo(so);
		result.put("info", info);
		return result;
	}
	
	@RequestMapping(value = "/searchFields")
	@ResponseBody
	public Map<String, Object> getFields(@RequestBody Map<String, Object> so) throws Exception {
		Map<String, Object> result = new HashMap<>();
		List<TbNtcFieldVo> fieldList = evl1101eService.getFields(so);
		result.put("list", fieldList);
		return result;
	}
	
	@RequestMapping(value = "/searchJudges")
	@ResponseBody
	public Map<String, Object> getSelectedJudges(@RequestParam Map<String, Object> so) throws Exception {
		Map<String, Object> result = new HashMap<>();
		List<TbSelEvalJdgVo> judgeList = evl1101eService.getSelectedJudges(so);
		result.put("list", judgeList);
		return result;
	}

	@RequestMapping(value = "/getJudgeListByType")
	@ResponseBody
	public Map<String, Object> getJudgeListByType(@RequestParam String jdgDiv) throws Exception {
		Map<String, Object> result = new HashMap<>();
		List<TbSelEvalJdgVo> judgeList = evl1101eService.getJudgeListByType(jdgDiv);
		result.put("list", judgeList);
		return result;
	}
	
	@RequestMapping(value = "/saveJudges")
	@ResponseBody
	public Map<String, Object> saveJudges(@RequestBody List<Map<String, Object>> judges) throws Exception {
		Map<String, Object> result = new HashMap<>();
		List<Integer> resultCnts = evl1101eService.insertJudges(judges);
		result.put("insertCnt", resultCnts.get(0));
		result.put("deleteCnt", resultCnts.get(1));
		result.put("updateCnt", resultCnts.get(2));
		return result;
	}
	
	@RequestMapping(value = "/confirmJudges")
	@ResponseBody
	public Map<String, Object> confirmJudges(@RequestBody List<String> usrCds) throws Exception {
		Map<String, Object> result = new HashMap<>();
		int updateCnt = evl1101eService.confirmJudges(usrCds);
		result.put("updateCnt", updateCnt);
		return result;
	}
	
	@RequestMapping(value = "/cancelConfirmJudges")
	@ResponseBody
	public Map<String, Object> cancelConfirmJudges(@RequestBody List<String> usrCds) throws Exception {
		Map<String, Object> result = new HashMap<>();
		int updateCnt = evl1101eService.cancelConfirmJudges(usrCds);
		result.put("updateCnt", updateCnt);
		return result;
	}
}
